// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SiPerpusApi.Repositories;

#nullable disable

namespace SiPerpusApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230909192620_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SiPerpusApi.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .IsRequired()
                        .HasColumnType("integer")
                        .HasColumnName("CATEGORY_ID");

                    b.Property<string>("CodeBook")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("CODE_BOOK");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("ISBN")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("ISBN");

                    b.Property<string>("NameBook")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NAME_BOOK");

                    b.Property<int>("PageBook")
                        .HasColumnType("integer")
                        .HasColumnName("PAGE_BOOK");

                    b.Property<string>("Pengarang")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("PENGARANG");

                    b.Property<int?>("PublisherId")
                        .IsRequired()
                        .HasColumnType("integer")
                        .HasColumnName("PUBLISHER_ID");

                    b.Property<int?>("RackId")
                        .IsRequired()
                        .HasColumnType("integer")
                        .HasColumnName("RACK_ID");

                    b.Property<int>("Stock")
                        .HasColumnType("integer")
                        .HasColumnName("STOCK");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("UPDATED_AT");

                    b.Property<string>("YearBook")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)")
                        .HasColumnName("YEAR_BOOK");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PublisherId");

                    b.HasIndex("RackId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("SiPerpusApi.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("NameCategory")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NAME_CATEGORY");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SiPerpusApi.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("CREATED_AT");

                    b.Property<string>("NamePublisher")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("NAME_PUBLISHER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("SiPerpusApi.Models.Rack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeRack")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("CODE_RACK");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("CREATED_AT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("UPDATED_AT");

                    b.HasKey("Id");

                    b.ToTable("Racks");
                });

            modelBuilder.Entity("SiPerpusApi.Models.Book", b =>
                {
                    b.HasOne("SiPerpusApi.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiPerpusApi.Models.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiPerpusApi.Models.Rack", "Rack")
                        .WithMany()
                        .HasForeignKey("RackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Publisher");

                    b.Navigation("Rack");
                });
#pragma warning restore 612, 618
        }
    }
}
